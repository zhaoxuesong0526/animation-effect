{"version":3,"sources":["page/home/index.jsx","components/slider.jsx","page/button/index.jsx","page/container/index.jsx","page/image/index.jsx","page/list/index.jsx","page/nav/index.jsx","page/slider/index.jsx","page/text/index.jsx","App.js","serviceWorker.js","index.js","logo.png"],"names":["Home","className","React","Component","Sider","Layout","Slider","props","console","log","width","mode","defaultSelectedKeys","style","height","menuList","map","item","index","Item","key","onClick","handlerCick","Content","Button","setState","curIndex","state","this","ref","iframe","id","title","src","frameBorder","Container","Image","List","Nav","Text","App","logo","alt","to","from","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.4f0675f0.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss'\nexport default class Home extends React.Component {\n  render() {\n    return (\n        <div className=\"Home\">\n            <h3>动画的原则</h3> &nbsp;\n               <p>  自然 高效 克制</p> &nbsp;\n            <h3>动效价值</h3> &nbsp;\n                <p> 增加体验舒适度： 让用户认知过程更为自然。</p>\n                &nbsp;<p>增加界面活力：第一时间吸引注意力，突出重点。</p>\n                &nbsp;<p>描述层级关系：体现元素之间的层级与空间关系。</p>\n                &nbsp;<p>提供反馈、明确意向：助力交互体验。 </p> &nbsp;\n            <h3>衡量动效意义</h3> &nbsp;\n                &nbsp;&nbsp;<p>衡量一个动效是否有意义，我们可以通过以下几个标准来考核：</p>\n                &nbsp;<p>一个动效的存在是否合理：是否带有明确的目的性，助力交互体验，没有多余的动效</p>\n                &nbsp;<p>动效与性能：不能出现大幅度波动丢帧或者卡顿现象, 动效的体验须是流畅的，并且不影响产品的性能。</p>\n         </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nconst { Sider } = Layout;\nconst Slider = (props) => {\n  console.log(props);\n  return (\n    <>\n      <Sider className=\"site-layout-background\" width={200}>\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          style={{ height: '100%' }}\n        >\n          {props.menuList.map((item, index) => {\n            return (\n                <Menu.Item key={index + 1} onClick={() => {\n                    props.handlerCick(item,index)\n              }}>\n                <span>{item}</span>\n              </Menu.Item>\n            );\n          })}\n        </Menu>\n      </Sider>\n    </>\n  );\n};\nexport default Slider;\n","import React from 'react';\nimport './index.scss';\nimport Slider from '../../components/slider';\nimport { Layout } from 'antd';\nconst { Content } = Layout;\nexport default class Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuList: ['效果一', '效果二', '效果三'],\n      curIndex: 0\n    };\n  }\n  render() {\n    return (\n      <div className=\"Button\">\n        <Layout className=\"site-layout-background\">\n          <Slider\n            menuList={this.state.menuList}\n            handlerCick={this.handlerCick}\n          ></Slider>\n          <Content className=\"site-layout-background\">\n            {this.state.curIndex === 0 && (\n              <div>\n                0\n                 <iframe\n                ref={(ref) => {\n                  this.iframe = ref;\n                }}\n                id=\"iframe\"\n                className=\"iframe\"\n                title=\"xxx\"\n                src=\"//ianlunn.github.io/Hover/\"\n                frameBorder=\"0\"\n              ></iframe>\n              </div>\n            )}\n            {this.state.curIndex === 1 && (\n              <div>\n                1\n                  <iframe\n                ref={(ref) => {\n                  this.iframe = ref;\n                }}\n                id=\"iframe\"\n                className=\"iframe\"\n                title=\"xxx\"\n                src=\"//ianlunn.github.io/Hover/\"\n                frameBorder=\"0\"\n              ></iframe>\n              </div>\n            \n            )}\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n  handlerCick = (item,index) => {\n    console.log(item);\n    this.setState({\n      curIndex:index\n    })\n  };\n}\n","import React from 'react';\n\nexport default class Container extends React.Component{\n    render() {\n        return (\n            <div>\n               Container\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Image extends React.Component{\n    render() {\n        return (\n            <div>\n               Image\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class List extends React.Component{\n    render() {\n        return (\n            <div>\n                List\n                <iframe ref={(ref)=>{this.iframe = ref}}  className=\"iframe\" title=\"xxx\" src=\"http://www.imagehover.io/\"  frameBorder=\"0\"></iframe>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Nav extends React.Component{\n    render() {\n        return (\n            <div>\n               Nav\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Slider extends React.Component{\n    render() {\n        return (\n            <div>\n               Slider\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Text extends React.Component{\n    render() {\n        return (\n            <div>\n               Text\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect, NavLink } from \"react-router-dom\"\nimport './App.scss'\nimport logo from './logo.png';\nimport 'antd/dist/antd.css';\nimport Home from \"./page/home\"\nimport Button from \"./page/button\"\nimport Container from \"./page/container\"\nimport Image from \"./page/image\"\nimport List from \"./page/list\"\nimport Nav from \"./page/nav\"\nimport Slider from \"./page/slider\"\nimport Text from \"./page/text\"\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div className=\"App-header\"> \n          <div className=\"logo\"><img src={logo} alt=\"logo\"/></div>\n          <header className=\"header\">\n            <NavLink to=\"/home\">Home</NavLink>\n            <NavLink to=\"/button\">Button</NavLink>\n            <NavLink to=\"/container\">Container</NavLink>\n            <NavLink to=\"/image\">Image</NavLink>\n            <NavLink to=\"/list\">List</NavLink>\n            <NavLink to=\"/nav\">Nav</NavLink>\n            <NavLink to=\"/slider\">Slider</NavLink>\n            <NavLink to=\"/text\">Text</NavLink>\n          </header>\n        </div>\n        <div className=\"App-container\">\n        <Switch>\n          <Redirect from=\"/\" exact to=\"/home\"></Redirect>\n          <Route path=\"/home\" component={Home} ></Route>\n          <Route path=\"/button\" component={Button} ></Route>\n          <Route path=\"/container\" component={Container} ></Route>\n          <Route path=\"/image\"  component={Image} ></Route>\n          <Route path=\"/list\"  component={List} ></Route>\n          <Route path=\"/nav\"  component={Nav} ></Route>\n          <Route path=\"/slider\"  component={Slider} ></Route>\n          <Route path=\"/text\" component={Text} ></Route>\n        </Switch>\n\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c187f82e.png\";"],"sourceRoot":""}